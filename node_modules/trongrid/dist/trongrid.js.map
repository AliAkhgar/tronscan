{"version":3,"sources":["webpack://trongrid/webpack/universalModuleDefinition","webpack://trongrid/webpack/bootstrap","webpack://trongrid/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/createClass.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/inherits.js","webpack://trongrid/./node_modules/@babel/runtime/regenerator/index.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/typeof.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://trongrid/./node_modules/injectpromise/index.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://trongrid/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://trongrid/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://trongrid/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://trongrid/./src/utils/Validator.js","webpack://trongrid/./src/lib/core/Account.js","webpack://trongrid/./src/lib/core/Asset.js","webpack://trongrid/./src/lib/core/Block.js","webpack://trongrid/./src/lib/core/Contract.js","webpack://trongrid/./src/lib/core/Transaction.js","webpack://trongrid/./src/lib/plugins/TronWebPlugin.js","webpack://trongrid/./src/lib/apis/APIClient.js","webpack://trongrid/./src/lib/core/Base.js","webpack://trongrid/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_typeof","assertThisInitialized","self","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_typeof2","obj","iterator","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","this","args","arguments","apply","err","undefined","scope","func","res","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","ReferenceError","_setPrototypeOf","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","push","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","pushTryEntry","locs","iteratorMethod","Array","isArray","_arr","_n","_d","_e","_s","_i","tronWeb","utils","account","APIClient","tronGrid","classCallCheck_default","apiNode","eventServer","path","options","callback","experimental","request","response","only_data_and_fingerprint","data","meta","fingerprint","_httpClient","Validator","typeof_default","address","isAddress","identifier","test","blockNumber","transactionID","limit","isInteger","eventName","minBlockTimestamp","maxBlockTimestamp","Base","TronGrid","injectPromise","injectpromise","validator","Account","_this","possibleConstructorReturn_default","getPrototypeOf_default","isFunction","validateAddress","fromHex","concat","getTransactions","getTrc20Transactions","Asset","validateAssetIdentifier","validateOptions","getList","getAll","Block","validateBlockNumber","getEvents","Contract","contractAddress","getTrc20Tokens","listener","lastBlock","since","Date","now","eventWatcher","_callee","events","_events$sort","_events$sort2","latestEvent","newEvents","regenerator_default","a","_context","assign","orderBy","_this2","sort","b","block_timestamp","slicedToArray_default","filter","event","index","some","priorEvent","JSON","stringify","t0","bindListener","clearInterval","setInterval","start","Transaction","validateTransactionId","TronWebPlugin","setExperimental","defaultAddress","hex","direction","offset","only_to","only_from","asset","block","contract","transaction","apiClient","code","tronWebPlugin","requires","components","trx","getTransactionsRelated","validatePageData","links","nextPage"],"mappings":"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","file":"trongrid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"trongrid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"trongrid\"] = factory();\n\telse\n\t\troot[\"trongrid\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","module.exports = require(\"regenerator-runtime\");\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = function (scope) {\n  return (func, ...args) => {\n    return (function (func, ...args) {\n      return new Promise((resolve, reject) => {\n        func(...args, (err, res) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(res)\n          }\n        })\n      })\n    })(func.bind(scope), ...args)\n  }\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","let tronWeb;\nlet utils;\n\nexport default class Validator {\n\n    constructor(tronGrid) {\n        tronWeb = tronGrid.tronWeb;\n        utils = tronWeb.utils;\n    }\n\n    validatePageData(data) {\n        if (!data) {\n            throw new Error('Invalid data provided.');\n        } else if (typeof data !== 'string' && typeof data !== 'object'){\n            throw new Error('Invalid data format provided.');\n        } else if (typeof data === 'string' && data.indexOf('fingerprint') === -1) {\n            throw new Error('It\\'s the last page or missed fingerprint in the links.');\n        } else if (typeof data === 'object' && (!data.meta || !data.meta.fingerprint)) {\n            throw new Error('It\\'s the last page or missed fingerprint in the json.');\n        }\n    }\n\n    validateAddress(address) {\n        if (!tronWeb.isAddress(address))\n            throw new Error('Invalid address provided.');\n    }\n\n    validateAssetIdentifier(identifier) {\n        if (!identifier || /[^a-zA-Z0-9_]+/.test(identifier))\n            throw new Error('Invalid identifier provided.');\n    }\n\n    validateBlockNumber(blockNumber) {\n        if (blockNumber === 'latest') {\n            return;\n        }\n        if (!blockNumber || /[^0-9]/.test(blockNumber.toString())) {\n            throw new Error('Invalid block number provided.');\n        }\n    }\n\n    validateTransactionId(transactionID) {\n        if (!/^[a-z0-9]{64}/.test(transactionID)) {\n            throw new Error('Invalid transaction id provided.');\n        }\n    }\n\n    validateOptions(options) {\n        if (options.limit) {\n            if (!utils.isInteger(options.limit) || options.limit < 0 || options.limit > 200) {\n                throw new Error('Limit should be a number between 0 and 200.');\n            }\n        }\n        if (options.blockNumber && !options.eventName) {\n            throw new Error('Usage of block number filtering requires an event name.');\n        }\n        if (options.minBlockTimestamp && !utils.isInteger(options.minBlockTimestamp)) {\n            throw new Error('Invalid minBlockTimestamp provided.');\n        }\n        if (options.maxBlockTimestamp && (!utils.isInteger(options.maxBlockTimestamp) && options.maxBlockTimestamp !== 'now')) {\n            throw new Error('Invalid maxBlockTimestamp provided.');\n        }\n    }\n\n};\n","import Base from './Base';\n\nlet utils;\n\nexport default class Account extends Base {\n\n    constructor(tronGrid) {\n        super(tronGrid);\n        utils = this.utils;\n    }\n\n    /**\n     * @name TG API: /v1/accounts/:address\n     * @param address (hex or base58 format)\n     * @param options (filters: only_confirmed)\n     * @param callback\n     * @returns account\n     */\n    get(address, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.get, address, options);\n\n        this.validator.validateAddress(address);\n\n        if (address.length !== 34)\n            address = this.tronWeb.address.fromHex(address);\n\n        return this.APIClient.get(`v1/accounts/${address}`, options, callback);\n    }\n\n    /**\n     * @name TG3 API: /v1/accounts/:address/transactions\n     * @param address\n     * @param options\n     * @param callback\n     * @returns list of transactions\n     */\n    getTransactions(address, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactions, address, options);\n\n        this.validator.validateAddress(address);\n\n        if (address.length !== 34)\n            address = this.tronWeb.address.fromHex(address);\n\n        return this.APIClient.get(`v1/accounts/${address}/transactions`, options, callback);\n    }\n\n    /**\n     * @name TG3 API: /v1/accounts/:address/transactions/trc20\n     * @param address\n     * @param options\n     * @param callback\n     * @returns list of transactions\n     */\n    getTrc20Transactions(address, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTrc20Transactions, address, options);\n\n        this.validator.validateAddress(address);\n\n        if (address.length !== 34)\n            address = this.tronWeb.address.fromHex(address);\n\n        return this.APIClient.get(`v1/accounts/${address}/transactions/trc20`, options, callback);\n    }\n\n}\n","import Base from './Base';\n\nlet utils;\n\nexport default class Asset extends Base {\n\n    constructor(tronGrid) {\n        super(tronGrid);\n        utils = this.utils;\n    }\n\n    /**\n     * @name TG API: /v1/assets/:identifier\n     * @param identifier (asset ID, or issuer address)\n     * @param callback\n     * @returns list of assets\n     */\n    get(identifier = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        this.validator.validateAssetIdentifier(identifier);\n\n        if (!callback)\n            return this.injectPromise(this.get, identifier, options);\n\n        if (this.tronGrid.experimental)\n            options.experimental = this.tronGrid.experimental;\n\n        this.APIClient.get(`v1/assets/${identifier}`, options, callback);\n    }\n\n    /**\n     * @name TG API: /v1/assets/:name/list\n     * @param name of the asset\n     * @param options (limit, fingerprint, sort, filter)\n     * @param callback\n     * @returns list of assets\n     */\n    getList(name = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        this.validator.validateAssetIdentifier(name);\n\n        this.validator.validateOptions(options);\n\n        if (!callback)\n            return this.injectPromise(this.getList, name, options);\n\n        return this.APIClient.get(`v1/assets/${name}/list`, options, callback);\n    }\n\n    /**\n     * @name TG API: /v1/assets\n     * @param lists all the assets\n     * @param options (limit, fingerprint, sort, filter)\n     * @param callback\n     * @returns list of assets\n     */\n    getAll(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        this.validator.validateOptions(options);\n\n        if (!callback)\n            return this.injectPromise(this.getAll, options);\n\n        return this.APIClient.get(`v1/assets`, options, callback);\n    }\n}\n","import Base from './Base';\n\nlet utils;\n\nexport default class Block extends Base {\n\n    constructor(tronGrid) {\n        super(tronGrid);\n        utils = this.utils;\n    }\n\n    /**\n     * @name TG API: /v1/blocks/:blockNumber/events\n     * @param blockNumber\n     * @param callback\n     * @returns list of events\n     */\n    getEvents(blockNumber = 'latest', options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.getEvents, blockNumber, options);\n        }\n\n        this.validator.validateBlockNumber(blockNumber);\n\n        return this.APIClient.get(`v1/blocks/${blockNumber}/events`, options, callback);\n\n    }\n\n}\n","import Base from './Base';\n\nlet utils;\n\nexport default class Contract extends Base {\n\n    constructor(tronGrid) {\n        super(tronGrid);\n        utils = this.utils;\n    }\n\n    /**\n     * @name TG API: /v1//contracts/:contractAddress\n     * @param contractAddress\n     * @param options(onlyConfirmed, onlyUnconfirmed, eventName, blockNumber, fromTimestamp, size, previousFingerprint, sort)\n     * @param callback\n     * @returns list of events\n     */\n    getEvents(contractAddress, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getEvents, contractAddress, options);\n\n        this.validator.validateAddress(contractAddress);\n\n        this.validator.validateOptions(options);\n\n        contractAddress = this.tronWeb.address.fromHex(contractAddress);\n\n        return this.APIClient.get(`v1/contracts/${contractAddress}/events`, options, callback);\n    }\n\n    /**\n     * @name TG API: /v1//contracts/:contractAdderss/tokens\n     * @param contractAddress\n     * @param options(onlyConfirmed, onlyUnconfirmed, previousFingerprint, orderBy, limit)\n     * @param callback\n     * @returns list of trc20 tokens\n     */\n    getTrc20Tokens(contractAddress, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTrc20Tokens, contractAddress, options);\n\n        this.validator.validateAddress(contractAddress);\n\n        contractAddress = this.tronWeb.address.fromHex(contractAddress);\n\n        return this.APIClient.get(`v1/contracts/${contractAddress}/tokens`, options, callback);\n    }\n\n    async watchEvent(contractAddress, eventName, options = {}, callback = false) {\n        let listener = false;\n        let lastBlock = false;\n        let since = Date.now() - 1000;\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!utils.isFunction(callback)) {\n            throw new Error('Invalid callback function provided');\n        }\n\n        const eventWatcher = async () => {\n            try {\n                options = Object.assign({\n                    eventName,\n                    minBlockTimestamp: since,\n                    orderBy: 'timestamp,desc',\n                    // TODO:\n                    // add filters => eventron is already equipped for them\n                    // filters: options.filters\n                }, options)\n\n                let events;\n\n                if(options.only_data_and_fingerprint) {\n                    events = await this.getEvents(contractAddress, options);\n                } else {\n                    const response = await this.getEvents(contractAddress, options);\n                    events = response.data;\n                }\n\n                const [latestEvent] = events.sort((a, b) => b.block_timestamp - a.block_timestamp);\n\n                const newEvents = events.filter((event, index) => {\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if (duplicate) return false;\n\n                    if (!lastBlock) return true;\n\n                    return event.block_timestamp > lastBlock;\n                });\n\n                if (latestEvent) lastBlock = latestEvent.block_timestamp;\n                return newEvents;\n\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n        };\n\n        const bindListener = () => {\n            if (listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                eventWatcher().then(events => events.forEach(event => {\n                    callback(null, event)\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await eventWatcher();\n        bindListener();\n\n        return {\n            start: bindListener(),\n            stop: () => {\n                if (!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n\n}\n","import Base from './Base';\n\nlet utils;\n\nexport default class Transaction extends Base {\n\n    constructor(tronGrid) {\n        super(tronGrid);\n        utils = this.utils;\n    }\n\n    /**\n     * @name TG API: /transaction/:id\n     * @param transactionID\n     * @param callback\n     * @returns list of events\n     */\n    getEvents(transactionID = false, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.getEvents, transactionID, options);\n        }\n\n        this.validator.validateTransactionId(transactionID);\n\n        return this.APIClient.get(`v1/transactions/${transactionID}/events`, options, callback);\n    }\n\n}\n","import Base from '../core/Base';\n\nlet utils;\nlet account;\n\nexport default class TronWebPlugin extends Base {\n\n    constructor(tronGrid) {\n        super(tronGrid);\n        utils = this.utils;\n        account = this.tronGrid.account;\n    }\n\n    setExperimental(experimental) {\n        this.tronGrid.setExperimental(experimental);\n    }\n\n    async getTransactions(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 20, offset = 0, callback = false) {\n\n        if (utils.isFunction(offset)) {\n            callback = offset;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 20;\n        }\n\n        if (utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        const options = {\n            limit,\n            only_data_and_fingerprint: true\n        }\n        if (direction === 'to') {\n            options.only_to = true\n        } else if (direction === 'from') {\n            options.only_from = true\n        }\n        return account.getTransactions(address, options, callback)\n    }\n\n}\n","\nexport default class APIClient {\n\n    constructor(tronGrid) {\n        this.tronGrid = tronGrid;\n        this.apiNode = tronGrid.tronWeb.eventServer;\n    }\n\n    _httpClient(path, options, callback, method = 'get') {\n\n        if (!options.experimental && this.tronGrid.experimental) {\n            options.experimental = this.tronGrid.experimental;\n        }\n\n        this.apiNode.request(path, options, method).then(response => {\n            if (options.only_data_and_fingerprint) {\n                callback(null, response.data, response.meta.fingerprint);\n            } else {\n                callback(null, response);\n            }\n        }).catch(err => callback(err));\n\n    }\n\n    get(path, options, callback) {\n        return this._httpClient(path, options, callback, 'get');\n    }\n\n    //TODO\n    post(...params) {}\n\n    //TODO\n    put(...params) {}\n\n    //TODO\n    del(...params) {}\n\n}\n","import TronGrid from '../../index';\nimport APIClient from '../apis/APIClient';\nimport validator from '../../utils/Validator';\nimport injectpromise from 'injectpromise';\n\nclass Base {\n\n    constructor(tronGrid) {\n        if (!tronGrid || !(tronGrid instanceof TronGrid))\n            throw new Error('Expected instance of TronGrid');\n\n        this.tronGrid = tronGrid;\n        this.tronWeb = tronGrid.tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.apiNode = this.tronWeb.eventServer;\n        this.utils = this.tronWeb.utils;\n        this.validator = new validator(tronGrid);\n        this.APIClient = new APIClient(tronGrid);\n    }\n\n}\n\nexport default Base\n","import Account from 'lib/core/Account';\nimport Asset from 'lib/core/Asset';\nimport Block from 'lib/core/Block';\nimport Contract from 'lib/core/Contract';\nimport Transaction from 'lib/core/Transaction';\nimport TronWebPlugin from 'lib/plugins/TronWebPlugin';\nimport APIClient from 'lib/apis/APIClient';\nimport validator from 'utils/Validator';\nimport injectpromise from 'injectpromise';\n\nlet utils;\nlet experimental;\n\nexport default class TronGrid {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.utils = utils = tronWeb.utils\n        this.account = new Account(this);\n        this.asset = new Asset(this);\n        this.block = new Block(this);\n        this.contract = new Contract(this);\n        this.transaction = new Transaction(this);\n        this.apiClient = new APIClient(this);\n        this.validator = new validator(this);\n        this.injectPromise = injectpromise(this);\n\n        this.experimental = undefined;\n    }\n\n    setExperimental(code) {\n        this.experimental = code;\n    }\n\n    pluginInterface(options) {\n        if (options.experimental) {\n            experimental = options.experimental\n        }\n        const tronWebPlugin = new TronWebPlugin(this);\n        tronWebPlugin.setExperimental(options.experimental);\n        return {\n            requires: '^2.2.4',\n            components: {\n                trx: {\n                    getTransactionsRelated: tronWebPlugin.getTransactions\n                }\n            }\n        }\n    }\n\n    nextPage(data, callback) {\n\n        if (!callback)\n            return this.injectPromise(this.nextPage, data);\n\n        this.validator.validatePageData(data);\n\n        if (typeof data === 'string') {\n            return this.apiClient.get(data, {}, callback);\n        } else if (typeof data === 'object') {\n            return this.apiClient.get(data.meta.links.next, {}, callback);\n        }\n    }\n}\n"],"sourceRoot":""}